name: Build app

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      java-version:
        required: false
        type: string
        description: Java SDK versjon som skal brukes.
        default: '17'
      use-oracle:
        required: false
        type: boolean
        description: Skal oracle database brukes?
        default: true
      push:
        required: false
        type: boolean
        description: Skal docker image pushes
        default: false
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}

jobs:
  build-and-test:
    name: Build and test app
    runs-on: ${{ inputs.runs-on }}
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjøre tags
        with:
          fetch-depth: 0

      - name: Create maven .m2 settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{
              "id": "github", "name": "github", "url": "https://maven.pkg.github.com/${{ github.repository }}",
              "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" }
            }]'
          servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.READER_TOKEN }}" }]'
          output_file: settings.xml

      - name: Set up JDK${{ inputs.java-version }} with cache
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Generate build version
        id: generate-build-version
        run: echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Hent og start Oracle image
        if: inputs.use-oracle
        id: oracle
        env:
          TZ: "Europe/Oslo"
        run: |
          echo "Henter og starter Oracle image"
          cd .oracle
          docker-compose up --quiet-pull > nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Database opened./q" && kill $$; }' || true

      - name: Set maven artifact version
        run: mvn versions:set -DnewVersion="${{ steps.generate-build-version.outputs.build-version }}"

      - name: Build artifacts with maven
        run: |
          echo "Building artifacts ${steps.generate-build-version.outputs.build-version}"
          mvn verify -T 2C -q -e -B -s settings.xml -Dfile.encoding=UTF-8
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: ${{ job.services.oracle.ports[1521] }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          pull: true
          push: ${{ github.ref_name == 'master' || github.ref_name == 'main' && inputs.push }}
          tags: ghcr.io/${{ github.repository }}:${{env.BUILD_VERSION}}, ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
